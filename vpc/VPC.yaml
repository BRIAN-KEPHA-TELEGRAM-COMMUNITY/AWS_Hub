AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation template to create a VPC with public and private subnets, an internet gateway, a public route table, a NAT Gateway, a private route table, and a Network ACL for the public subnet"

Resources:
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId:
        Ref: "MyVPC"
      InternetGatewayId:
        Ref: "InternetGateway"

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "MyVPC"
      CidrBlock: "10.0.1.0/24"

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: "MyVPC"

  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: "AttachGateway"
    Properties:
      RouteTableId:
        Ref: "PublicRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: "InternetGateway"

  SubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet"
      RouteTableId:
        Ref: "PublicRouteTable"

  EIPForNATGateway:
    Type: "AWS::EC2::EIP"

  NATGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId:
        Fn::GetAtt: [EIPForNATGateway, AllocationId]
      SubnetId:
        Ref: "PublicSubnet"

  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "MyVPC"
      CidrBlock: "10.0.2.0/24"

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: "MyVPC"

  PrivateRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId:
        Ref: "PrivateRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId:
        Ref: "NATGateway"

  PublicSubnetNetworkACL:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId:
        Ref: "MyVPC"

  PublicSubnetInboundHTTPRule:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId:
        Ref: "PublicSubnetNetworkACL"
      RuleNumber: 100
      Protocol: 6
      RuleAction: "allow"
      Egress: false
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 80
        To: 80

  PublicSubnetInboundHTTPsRule:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId:
        Ref: "PublicSubnetNetworkACL"
      RuleNumber: 101
      Protocol: 6
      RuleAction: "allow"
      Egress: false
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 443
        To: 443

  PublicSubnetInboundSSHRule:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId:
        Ref: "PublicSubnetNetworkACL"
      RuleNumber: 102
      Protocol: 6
      RuleAction: "allow"
      Egress: false
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 22
        To: 22

  PublicSubnetAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet"
      NetworkAclId:
        Ref: "PublicSubnetNetworkACL"
